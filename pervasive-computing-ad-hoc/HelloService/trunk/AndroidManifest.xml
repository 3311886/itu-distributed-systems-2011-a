<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="dk.itu.spvc.android"
    android:versionCode="1"
    android:versionName="1.0" >

	<uses-sdk android:minSdkVersion="8" />
	
	
   	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
	<!-- mock is important which makes it possible to use the ddms to feed with fake locations -->
	<uses-permission android:name="android.permission.ACCESS_MOCK_LOCATION"></uses-permission>
	<uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"></uses-permission>


    <application
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name" >
        
        <!-- todo: singleInstance vs. singleTop etc ? 
        
        
			http://developer.android.com/guide/topics/manifest/activity-element.html#lmode        
			
			As shown in the table below, the modes fall into two main groups, with "standard" and "singleTop" activities on one side, and "singleTask" and "singleInstance" activities on the other. An activity with the "standard" or "singleTop" launch mode can be instantiated multiple times. The instances can belong to any task and can be located anywhere in the activity stack. Typically, they're launched into the task that called startActivity() (unless the Intent object contains a FLAG_ACTIVITY_NEW_TASK instruction, in which case a different task is chosen — see the taskAffinity attribute).
			In contrast, "singleTask" and "singleInstance" activities can only begin a task. They are always at the root of the activity stack. Moreover, the device can hold only one instance of the activity at a time — only one such task.
			The "standard" and "singleTop" modes differ from each other in just one respect: Every time there's a new intent for a "standard" activity, a new instance of the class is created to respond to that intent. Each instance handles a single intent. Similarly, a new instance of a "singleTop" activity may also be created to handle a new intent. However, if the target task already has an existing instance of the activity at the top of its stack, that instance will receive the new intent (in an onNewIntent() call); a new instance is not created. In other circumstances — for example, if an existing instance of the "singleTop" activity is in the target task, but not at the top of the stack, or if it's at the top of a stack, but not in the target task — a new instance would be created and pushed on the stack.

        -->
        
        
        <activity
            android:label="@string/app_name"
            android:name=".Main" 
            android:launchMode="singleInstance">
            <intent-filter >
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>        
        
        
        <!-- Service Samples -->
        <!-- grrrgh - dohh copied from api demo which have another structure app/LocalService 
        this one actually gave a sane error in the logcat
        W/ActivityManager(   67): Unable to start service Intent { cmp=dk.itu.spvc.android/.LocalService }: not found 
        -->
        <!-- <service android:name=".app.LocalService"></service> -->
        <service android:name=".apidemoexample.LocalService"></service>
                        
        <!-- 
        nb! not sure about the $Controller part
        argh got it - its because its a inner class - which only was used for the learning objective 
        recall:
        http://developer.android.com/reference/android/app/Service.html
         -->
	<activity
            android:label="@string/app_name"
            android:name=".apidemoexample.LocalServiceActivities$Controller" 
            android:launchMode="singleTop">
			<intent-filter>
                <!-- currently not main activity
                <action android:name="android.intent.action.MAIN" /> -->
                
                <!-- but have to be able to call / set up init's right? -->
				<category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        
        <!-- android:label="@string/activity_local_service_binding" -->
		<activity android:name=".apidemoexample.LocalServiceActivities$Binding"
                android:label="@string/app_name">
<!--             <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.SAMPLE_CODE" />
            </intent-filter> -->
		</activity>
            

		<!-- StandAloneLocalService not directly bound to a view is it possible  -->
        <service android:name=".standaloneservice.StandAloneLocalService"></service>
        
        <!-- location service - stand-a-lone -->
        <service android:name=".locationservice.LocationService"></service>
		<service android:name=".locationservice.LocationServiceDB"></service>
            
            

    </application>
        
</manifest>